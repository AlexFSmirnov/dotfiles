// Place your key bindings in this file to override the defaults
[
    // General
    {
        "key": "ctrl+alt+space",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },

    // Terminal/editor directional navigation keys
    {
        "key": "ctrl+space",
        "command": "workbench.action.terminal.focus",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+j",
        "command": "workbench.action.focusPanel",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k",
        "command": "workbench.action.focusPanel",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+l",
        "command": "workbench.action.focusRightGroup",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+h",
        "command": "workbench.action.focusLeftGroup",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+j",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorTextFocus"
    },
    {
        "key": "alt+k",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorTextFocus"
    },
    {
        "key": "alt+h",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "alt+l",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },

    // Editor split control
    {
        "key": "ctrl+a v",
        "command": "workbench.action.splitEditorRight",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+a h",
        "command": "workbench.action.splitEditorDown",
        "when": "editorTextFocus"
    },

    // Terminal split control and navigation
    {
        "key": "alt+shift+k",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus"
    },
    {
        "key": "alt+shift+j",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+a v",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+a n",
        "command": "workbench.action.terminal.new",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+a d",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+alt+d",
        "command": "workbench.action.terminal.focus",
        "when": "inDebugRepl"
    },
    {
        "key": "ctrl+alt+d",
        "command": "workbench.panel.repl.view.focus",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.debug.panel.action.clearReplAction",
        "when": "inDebugRepl"
    },

    // GitHub Copilot bindings
    {
        "key": "ctrl+i",
        "command": "interactiveEditor.start",
        "when": "!editorReadonly"
    },
    {
        "key": "ctrl+i",
        "command": "-interactiveEditor.start",
        "when": "interactiveEditorHasProvider && !editorReadonly"
    },
    {
        "key": "ctrl+alt+i",
        "command": "workbench.panel.interactiveSession.view.copilot.focus",
        "when": "!inChat"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.chat.clear",
        "when": "inChat"
    },
    {
        "key": "win+l",
        "command": "-workbench.action.chat.clear",
        "when": "inChat"
    },
    {
        "key": "ctrl+alt+i",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "inChat"
    },

    // Bind ctrl+shift+f for ESLint autofix, unbind from everywhere else
    {
        "key": "ctrl+shift+f",
        "command": "eslint.executeAutofix"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.action.findInFiles"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.action.terminal.searchWorkspace",
        "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.view.search",
        "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
    }
]
