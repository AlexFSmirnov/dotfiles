// Place your key bindings in this file to override the defaults
[
    // Remove default commands
    {
        "key": "ctrl+e",
        "command": "-composer.showBackgroundAgentHistory",
        "when": "backgroundComposerEnabled || showBackgroundAgentHistoryAction"
    },
    {
        "key": "ctrl+k",
        "command": "-aipopup.action.modal.generate",
        "when": "editorFocus && !composerBarIsVisible"
    },

    // Editor scrolling
    {
        "key": "ctrl+j",
        "command": "editorScroll",
        "args": {
            "to": "down",
            "by": "line",
            "value": 5,
            "revealCursor": true
        },
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k",
        "command": "editorScroll",
        "args": {
            "to": "up",
            "by": "line",
            "value": 5,
            "revealCursor": true
        },
        "when": "editorTextFocus"
    },

    // Terminal/editor directional navigation keys
    {
        "key": "alt+j",
        "command": "workbench.action.focusPanel",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k",
        "command": "workbench.action.focusPanel",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+l",
        "command": "workbench.action.focusRightGroup",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+h",
        "command": "workbench.action.focusLeftGroup",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+j",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorTextFocus"
    },
    {
        "key": "alt+k",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorTextFocus || inOutput"
    },
    {
        "key": "alt+h",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "alt+l",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },

    // Bottom panel navigation
    {
        "key": "shift+alt+h",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "problemFocus"
    },
    {
        "key": "shift+alt+l",
        "command": "workbench.action.output.toggleOutput",
        "when": "problemFocus"
    },
    {
        "key": "shift+alt+h",
        "command": "workbench.actions.view.problems",
        "when": "inOutput"
    },
    {
        "key": "shift+alt+l",
        "command": "workbench.panel.repl.view.focus",
        "when": "inOutput"
    },
    {
        "key": "shift+alt+h",
        "command": "workbench.action.output.toggleOutput",
        "when": "inDebugRepl"
    },
    {
        "key": "shift+alt+l",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "inDebugRepl"
    },
    {
        "key": "shift+alt+h",
        "command": "workbench.debug.action.toggleRepl",
        "when": "terminalFocus"
    },
    {
        "key": "shift+alt+l",
        "command": "workbench.actions.view.problems",
        "when": "terminalFocus"
    },

    // Tab navigation
    {
        "key": "shift+alt+h",
        "command": "workbench.action.openPreviousRecentlyUsedEditor",
        "when": "!problemFocus && !inOutput && !inDebugRepl && !terminalFocus"
    },
    {
        "key": "shift+alt+l",
        "command": "workbench.action.openNextRecentlyUsedEditor",
        "when": "!problemFocus && !inOutput && !inDebugRepl && !terminalFocus"
    },
    {
        "key": "shift+alt+j",
        "command": "workbench.action.quickOpenPreviousRecentlyUsedEditor",
        "when": "!problemFocus && !inOutput && !inDebugRepl && !terminalFocus"
    },
    {
        "key": "shift+alt+k",
        "command": "workbench.action.quickOpenLeastRecentlyUsedEditor",
        "when": "!problemFocus && !inOutput && !inDebugRepl && !terminalFocus"
    },
    {
        "key": "shift+alt+j",
        "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "shift+alt+k",
        "command": "workbench.action.quickOpenNavigatePreviousInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },

    // Editor split control
    {
        "key": "ctrl+a v",
        "command": "workbench.action.splitEditorRight",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+a h",
        "command": "workbench.action.splitEditorDown",
        "when": "editorTextFocus"
    },

    // Terminal split control and navigation
    {
        "key": "alt+shift+k",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus"
    },
    {
        "key": "alt+shift+j",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+a v",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+a n",
        "command": "workbench.action.terminal.new",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+a c",
        "command": "workbench.action.terminal.new",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+a d",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+a x",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.debug.panel.action.clearReplAction",
        "when": "inDebugRepl"
    },

    // Sidebar navigation
    {
        "key": "alt+l",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "filesExplorerFocus || searchViewletFocus || (workbench.scm.visible && view.workbench.scm.visible && !editorFocus)"
    },
    {
        "key": "alt+h",
        "command": "workbench.action.focusSideBar",
        "when": "editorTextFocus && activeEditorGroupIndex == 1"
    },
    {
        "key": "shift+alt+h",
        "command": "workbench.scm.focus",
        "when": "filesExplorerFocus"
    },
    {
        "key": "shift+alt+l",
        "command": "workbench.action.findInFiles",
        "when": "filesExplorerFocus"
    },
    {
        "key": "shift+alt+h",
        "command": "workbench.view.explorer",
        "when": "searchViewletFocus"
    },
    {
        "key": "shift+alt+l",
        "command": "workbench.scm.focus",
        "when": "searchViewletFocus"
    },
    {
        "key": "shift+alt+h",
        "command": "workbench.action.findInFiles",
        "when": "(workbench.scm.visible && view.workbench.scm.visible)"
    },
    {
        "key": "shift+alt+l",
        "command": "workbench.view.explorer",
        "when": "(workbench.scm.visible && view.workbench.scm.visible)"
    },

    // Dialog navigation
    {
        "key": "alt+j",
        "command": "workbench.action.quickOpenNavigateNext",
        "when": "inQuickOpen"
    },
    {
        "key": "alt+k",
        "command": "workbench.action.quickOpenNavigatePrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "alt+o",
        "command": "workbench.action.quickOpen",
        "when": "inQuickOpen"
    },
    {
        "key": "alt+q",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen"
    },

    // Autocomplete navigation
    {
        "key": "alt+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetVisible"
    },
    {
        "key": "alt+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetVisible"
    },
    {
        "key": "alt+o",
        "command": "acceptSelectedSuggestion",
        "when": "suggestWidgetVisible"
    },

    // References navigation
    {
        "key": "q",
        "command": "closeReferenceSearch",
        "when": "referenceSearchVisible"
    },
    {
        "key": "alt+q",
        "command": "closeReferenceSearch",
        "when": "referenceSearchVisible"
    },

    // Cursor settings
    {
        "key": "alt+h",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "composerFocused"
    },
    {
        "key": "alt+l",
        "command": "aichat.newchataction",
        "when": "!composerFocused && editorFocus && activeEditorGroupLast"
    },
    {
        "key": "alt+q",
        "command": "aichat.close-sidebar",
        "when": "composerFocused"
    },
    {
        "key": "alt-q",
        "command": "workbench.action.closeActiveEditorPromptBars",
        "when": "editorHasPromptBar && editorPromptBarFocused"
    }
]
